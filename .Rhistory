install.packages("forecast")
install.packages("timeSeries")
install.packages("KFAS")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
library(forecast)
df <- read.csv2("time_series_dataset.csv", dec = ".")
df$Data <- as.Date(df$Data)
head(df)
data <- ts(df$value, start=c(2010, 1), end=c(2018, 12), frequency = 365)
df2$mese <- months(df2$Data)
df2 <- df
df2$mese <- months(df2$Data)
df <- df2[1:(nrow(df) - 365),]
ggplot(data=df2, aes(x=Data, y=value)) +
geom_line()
#This is the function ggtsdisplay of forecast package, but it has been modified so is doesn't plot the series,
#just the ACF and PACF plot, with the horizontal parameter the plot can be either horizontal or vertical
#The function has been simplified a lot, since we don't need all the complexity the original one has.
ggtsdisplay_2 <- function(x, lag.max, na.action=na.contiguous,
theme=NULL, horizontal=TRUE, ...) {
#Checking Stuff
if (!requireNamespace("ggplot2", quietly = TRUE)) {
stop("ggplot2 is needed for this function to work. Install it via install.packages(\"ggplot2\")", call. = FALSE)
}
else if (!requireNamespace("grid", quietly = TRUE)) {
stop("grid is needed for this function to work. Install it via install.packages(\"grid\")", call. = FALSE)
}
else {
if (NCOL(x) > 1) {
stop("ggtsdisplay is only for univariate time series")
}
if (!is.ts(x)) {
x <- ts(x)
}
if (missing(lag.max)) {
lag.max <- round(min(max(10 * log10(length(x)), 3 * frequency(x)), length(x) / 3))
}
######      END   CHECKING    ########
# Set up grid for plots
if (horizontal){
gridlayout <- matrix(c(2, 3), nrow = 1)
}
else{
gridlayout <- matrix(c(2, 3), nrow = 2)
}
grid::grid.newpage()
grid::pushViewport(grid::viewport(layout = grid::grid.layout(nrow(gridlayout), ncol(gridlayout))))
# Prepare Acf plot
acfplot <- do.call(ggAcf, c(x = quote(x), lag.max = lag.max, na.action = na.action)) + ggplot2::ggtitle("ACF") + ggplot2::ylab(NULL)
if (!is.null(theme)) {
acfplot <- acfplot + theme
}
# Prepare last plot (variable)
pacfplot <- ggPacf(x, lag.max = lag.max, na.action = na.action) + ggplot2::ggtitle("PACF") + ggplot2::ylab(NULL)
# Match y-axis
acfplotrange <- ggplot2::layer_scales(acfplot)$y$range$range
pacfplotrange <- ggplot2::layer_scales(pacfplot)$y$range$range
yrange <- range(c(acfplotrange, pacfplotrange))
acfplot <- acfplot + ggplot2::ylim(yrange)
pacfplot <- pacfplot + ggplot2::ylim(yrange)
if (!is.null(theme)) {
pacfplot <- pacfplot + theme
}
# Add ACF plot
matchidx <- as.data.frame(which(gridlayout == 2, arr.ind = TRUE))
print(
acfplot,
vp = grid::viewport(
layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col
)
)
# Add last plot
matchidx <- as.data.frame(which(gridlayout == 3, arr.ind = TRUE))
print(
pacfplot,
vp = grid::viewport(
layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col
)
)
}
}
ggtsdisplay_2(df$value, horizontal = TRUE)
mod1 <- Arima(df$value, c(7,0,7), list(order=c(7,0,7), period=7))
